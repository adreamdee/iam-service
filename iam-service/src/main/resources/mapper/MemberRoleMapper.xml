<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.iam.infra.mapper.MemberRoleMapper">
    <resultMap id="clientWithRoles" type="io.choerodon.iam.infra.dataobject.ClientDO">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <collection property="roles" ofType="io.choerodon.iam.infra.dataobject.RoleDO" columnPrefix="role_">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
            <result property="code" column="code"/>
            <result property="enabled" column="is_enabled"/>
            <result property="builtIn" column="is_built_in"/>
        </collection>
    </resultMap>

    <select id="selectClientsWithRoles" resultMap="clientWithRoles" databaseId="mysql">
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        SELECT
        ic.NAME as name,
        ic.ID as id,
        iam_role.IS_ENABLED as role_is_enabled,
        iam_role.ID as role_id,
        iam_role.NAME as role_name,
        iam_role.CODE as role_code,
        iam_role.IS_BUILT_IN as role_is_built_in,
        iam_member_role.LAST_UPDATE_DATE as duplicated
        FROM
        (SELECT c.name, c.id, c.newest_date
        FROM (SELECT
        client.NAME as name,
        client.ID as id,
        MAX(imr.LAST_UPDATE_DATE) as newest_date
        FROM oauth_client client
        INNER JOIN iam_member_role imr ON client.ID = imr.MEMBER_ID
        INNER JOIN iam_role role ON imr.ROLE_ID = role.ID
        WHERE imr.MEMBER_TYPE = 'client'
        <if test="sourceId != null">
            AND imr.source_id = #{sourceId}
        </if>
        <if test="sourceType != null">
            AND imr.source_type = #{sourceType}
        </if>
        <if test="clientRoleSearchDTO != null">
            <if test="clientRoleSearchDTO.clientName != null">
                AND client.NAME LIKE CONCAT('%', CONCAT(#{clientRoleSearchDTO.clientName}, '%'))
            </if>
            <if test="clientRoleSearchDTO.roleName != null">
                AND role.NAME LIKE CONCAT('%', CONCAT(#{clientRoleSearchDTO.roleName}, '%'))
            </if>
        </if>
        <if test="param != null">
            AND ( client.NAME LIKE concat(concat('%',#{param}),'%')
            OR client.ADDITIONAL_INFORMATION LIKE concat(concat('%',#{param}),'%')
            OR client.AUTHORIZED_GRANT_TYPES LIKE concat(concat('%',#{param}),'%')
            OR role.name LIKE concat(concat('%',#{param}),'%')
            )
        </if>
        GROUP BY client.id, client.name
        ) c
        ORDER BY c.newest_date DESC
        <if test="start != null and size != null">
            limit #{start}, #{size}
        </if>
        ) ic
        LEFT JOIN iam_member_role ON iam_member_role.MEMBER_ID = ic.id
        LEFT JOIN iam_role ON iam_member_role.ROLE_ID = iam_role.ID
        LEFT JOIN iam_role_tl irt ON iam_role.id = irt.id
        WHERE iam_member_role.MEMBER_TYPE = 'client'
        AND irt.lang = #{lang}
        AND iam_member_role.source_id = #{sourceId}
        AND iam_member_role.source_type = #{sourceType}
        ORDER BY iam_member_role.LAST_UPDATE_DATE DESC
    </select>

    <select id="selectClientsWithRoles" resultMap="clientWithRoles">
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        SELECT
        ic.NAME as name,
        ic.ID as id,
        iam_role.IS_ENABLED as role_is_enabled,
        iam_role.ID as role_id,
        iam_role.NAME as role_name,
        iam_role.CODE as role_code,
        iam_role.IS_BUILT_IN as role_is_built_in,
        iam_member_role.LAST_UPDATE_DATE as duplicated
        FROM
        (SELECT c.name, c.id, c.newest_date
        FROM (SELECT
        client.NAME as name,
        client.ID as id,
        MAX(imr.LAST_UPDATE_DATE) as newest_date
        FROM oauth_client client
        INNER JOIN iam_member_role imr ON client.ID = imr.MEMBER_ID
        INNER JOIN iam_role role ON imr.ROLE_ID = role.ID
        WHERE imr.MEMBER_TYPE = 'client'
        <if test="sourceId != null">
            AND imr.source_id = #{sourceId}
        </if>
        <if test="sourceType != null">
            AND imr.source_type = #{sourceType}
        </if>
        <if test="clientRoleSearchDTO != null">
            <if test="clientRoleSearchDTO.clientName != null">
                AND client.NAME LIKE CONCAT('%', CONCAT(#{clientRoleSearchDTO.clientName}, '%'))
            </if>
            <if test="clientRoleSearchDTO.roleName != null">
                AND role.NAME LIKE CONCAT('%', CONCAT(#{clientRoleSearchDTO.roleName}, '%'))
            </if>
        </if>
        <if test="param != null">
            AND ( client.NAME LIKE concat(concat('%',#{param}),'%')
            OR client.ADDITIONAL_INFORMATION LIKE concat(concat('%',#{param}),'%')
            OR client.AUTHORIZED_GRANT_TYPES LIKE concat(concat('%',#{param}),'%')
            OR role.name LIKE concat(concat('%',#{param}),'%')
            )
        </if>
        GROUP BY client.id, client.name
        ) c
        ORDER BY c.newest_date DESC
        <if test="start != null and size != null">
            limit #{start}, #{size}
        </if>
        ) ic
        LEFT JOIN iam_member_role ON iam_member_role.MEMBER_ID = ic.id
        LEFT JOIN iam_role ON iam_member_role.ROLE_ID = iam_role.ID
        LEFT JOIN iam_role_tl irt ON iam_role.id = irt.id
        WHERE iam_member_role.MEMBER_TYPE = 'client'
        AND irt.lang = #{lang}
        AND iam_member_role.source_id = #{sourceId}
        AND iam_member_role.source_type = #{sourceType}
        ORDER BY iam_member_role.LAST_UPDATE_DATE DESC
    </select>

    <select id="selectClientsWithRoles" resultMap="clientWithRoles" databaseId="oracle">
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        SELECT
        ic.NAME as name,
        ic.ID as id,
        iam_role.IS_ENABLED as role_is_enabled,
        iam_role.ID as role_id,
        iam_role.NAME as role_name,
        iam_role.CODE as role_code,
        iam_role.IS_BUILT_IN as role_is_built_in
        FROM
        (
        <if test="start != null and size != null">
            SELECT *
            FROM
            (
            SELECT TMP_PAGE.*, ROWNUM ROW_ID
            FROM
            (
        </if>
        SELECT * FROM oauth_client oc
        JOIN (
        SELECT imr.member_id, MAX(imr.LAST_UPDATE_DATE) as newest_date
        FROM oauth_client
        LEFT JOIN iam_member_role imr ON imr.member_id = oauth_client.id
        LEFT JOIN iam_role ir ON ir.id = imr.role_id
        WHERE imr.member_type = 'client'
        AND imr.source_id = #{sourceId}
        AND imr.source_type = #{sourceType}
        <if test="sourceId != null">
            AND imr.source_id = #{sourceId}
        </if>
        <if test="sourceType != null">
            AND imr.source_type = #{sourceType}
        </if>
        <if test="clientRoleSearchDTO != null">
            <if test="clientRoleSearchDTO.clientName != null">
                AND oauth_client.NAME LIKE CONCAT('%', CONCAT(#{clientRoleSearchDTO.clientName}, '%'))
            </if>
            <if test="clientRoleSearchDTO.roleName != null">
                AND iam_role.NAME LIKE CONCAT('%', CONCAT(#{clientRoleSearchDTO.roleName}, '%'))
            </if>
        </if>
        <if test="param != null">
            AND ( oauth_client.NAME LIKE concat(concat('%',#{param}),'%')
            OR oauth_client.ADDITIONAL_INFORMATION LIKE concat(concat('%',#{param}),'%')
            OR oauth_client.AUTHORIZED_GRANT_TYPES LIKE concat(concat('%',#{param}),'%')
            OR iam_role.name LIKE concat(concat('%',#{param}),'%')
            )
        </if>
        GROUP BY imr.id
        ) t
        ON oc.ID = t.member_id
        <if test="start == null or size == null">
            ORDER BY t.newest_date
        </if>
        <if test="start != null and size != null">
            ) TMP_PAGE
            <![CDATA[
                    WHERE ROWNUM <= ((#{start} + 1) * #{size})
                    )
                  WHERE ROW_ID > (#{start} * #{size})
                ]]>
            ORDER BY TMP_PAGE.newest_date
        </if>
        ) ic
        LEFT JOIN iam_member_role ON iam_member_role.MEMBER_ID = ic.id
        LEFT JOIN iam_role ON iam_member_role.ROLE_ID = iam_role.ID
        LEFT JOIN iam_role_tl irt ON iam_role.id = irt.id
        WHERE iam_member_role.MEMBER_TYPE = 'client'
        AND irt.lang = #{lang}
        AND iam_member_role.source_id = #{sourceId}
        AND iam_member_role.source_type = #{sourceType}
        ORDER BY iam_member_role.LAST_UPDATE_DATE DESC
    </select>

    <select id="selectCountClients" resultType="int">
        SELECT COUNT(1)
        FROM (
        SELECT DISTINCT
        client.NAME as name,
        client.ID as id
        FROM oauth_client client
        INNER JOIN iam_member_role imr ON client.ID = imr.MEMBER_ID
        INNER JOIN iam_role role ON imr.ROLE_ID = role.ID
        WHERE imr.MEMBER_TYPE = 'client'
        <if test="sourceId != null">
            AND imr.source_id = #{sourceId}
        </if>
        <if test="sourceType != null">
            AND imr.source_type = #{sourceType}
        </if>
        <if test="clientRoleSearchDTO != null">
            <if test="clientRoleSearchDTO.clientName != null">
                AND client.NAME LIKE CONCAT('%', CONCAT(#{clientRoleSearchDTO.clientName}, '%'))
            </if>
            <if test="clientRoleSearchDTO.roleName != null">
                AND role.NAME LIKE CONCAT('%', CONCAT(#{clientRoleSearchDTO.roleName}, '%'))
            </if>
        </if>
        <if test="param != null">
            AND ( client.NAME LIKE concat(concat('%',#{param}),'%')
            OR client.ADDITIONAL_INFORMATION LIKE concat(concat('%',#{param}),'%')
            OR client.AUTHORIZED_GRANT_TYPES LIKE concat(concat('%',#{param}),'%')
            OR role.name LIKE concat(concat('%',#{param}),'%')
            )
        </if>
        ) temp
    </select>

    <delete id="deleteMemberRoleByMemberIdAndMemberType">
        DELETE
        FROM iam_member_role
        WHERE MEMBER_ID = #{memberId}
          AND MEMBER_TYPE = #{memberType}
    </delete>

    <select id="selectDeleteList" resultType="java.lang.Long">
        SELECT id FROM iam_member_role
        WHERE member_id = #{memberId}
        AND member_type = #{memberType}
        AND source_id = #{sourceId}
        AND source_type = #{sourceType}
        AND role_id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectCountBySourceId" resultType="java.lang.Integer">
        SELECT COUNT(DISTINCT source_id)
        FROM iam_member_role
        WHERE iam_member_role.member_id = #{id}
          AND iam_member_role.source_type = #{type}
    </select>

</mapper>
