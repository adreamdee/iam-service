<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.iam.infra.mapper.ProjectMapper">

    <resultMap id="projectDTO" type="io.choerodon.iam.infra.dto.ProjectDTO" autoMapping="true">
        <id column="id" property="id"></id>
        <result column="is_enabled" property="enabled" jdbcType="BOOLEAN"/>
        <collection property="projects" ofType="io.choerodon.iam.infra.dto.ProjectDTO">
            <id property="id" column="project_id"></id>
            <result property="name" column="project_name"/>
            <result property="code" column="project_code"/>
            <result property="enabled" column="project_enabled"/>
            <result property="organizationId" column="project_organization_id"/>
        </collection>
    </resultMap>

    <resultMap id="ProjectWithRoleDTO" type="io.choerodon.iam.infra.dto.ProjectDTO" autoMapping="true">
        <id property="id" column="id"></id>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <result property="organizationId" column="organization_id"/>
        <result property="organizationName" column="organization_name" jdbcType="VARCHAR"/>
        <result property="enabled" column="is_enabled"/>
        <collection property="roles" ofType="io.choerodon.iam.infra.dto.RoleDTO" autoMapping="true">
            <id property="id" column="role_id"></id>
            <result property="name" column="role_name"/>
            <result property="code" column="role_code"/>
            <result property="enabled" column="role_is_enabled"/>
        </collection>
    </resultMap>

    <select id="listUserIds" resultType="java.lang.Long">
    SELECT
	    iam_user.id
    FROM
	    iam_user
    RIGHT JOIN (
	  SELECT DISTINCT
		  member_id
	  FROM
		  iam_member_role
	  WHERE
		  source_id = #{projectId}
	  AND source_type = 'project'
	  AND member_type = 'user'
    ) t ON iam_user.id = t.member_id
    </select>

    <select id="selectAllWithProjectType" resultMap="projectDTO">
        SELECT fp.*, fpt.name AS type_name
        FROM fd_project fp
        LEFT JOIN fd_project_type fpt ON fp.type = fpt.code
    </select>

    <select id="selectUserProjectsUnderOrg" resultMap="projectDTO">
        SELECT DISTINCT fp.*
        FROM fd_project fp
        INNER JOIN iam_member_role imr
        ON imr.source_id = fp.id
        WHERE imr.member_id = #{userId} AND imr.source_type = 'project' AND fp.organization_id = #{orgId}
        <if test="isEnabled != null">
            AND is_enabled = #{isEnabled}
        </if>
    </select>

    <select id="fulltextSearchCount" resultType="java.lang.Integer">
        select count(fp.id) from fd_project fp
        left join fd_project_type fpt
        on fp.type = fpt.code
        where fp.organization_id = #{project.organizationId}
        <if test="project.name != null">
            and fp.name like concat(concat('%',#{project.name}),'%')
        </if>
        <if test="project.code != null">
            and fp.code like concat(concat('%',#{project.code}),'%')
        </if>
        <if test="project.enabled != null">
            and fp.is_enabled = #{project.enabled}
        </if>
        <if test="project.category != null">
            and fp.category = #{project.category}
        </if>
        <if test="project.typeName != null">
            and fpt.name like concat(concat('%',#{project.typeName}),'%')
        </if>
        <if test="param != null">
            and(
            fp.name like concat(concat('%',#{param}),'%') or
            fp.code like concat(concat('%',#{param}),'%') or
            fpt.name like concat(concat('%',#{param}),'%')
            )
        </if>
    </select>

    <select id="fulltextSearch" resultMap="projectDTO">
        select
        t1.*,
        fp1.id as project_id,
        fp1.name as project_name,
        fp1.code as project_code,
        fpr.is_enabled as project_enabled,
        fp1.organization_id as project_organization_id
        from
        (
        select fp.*, fpt.name as type_name
        from fd_project fp
        left join fd_project_type fpt
        on fp.type = fpt.code
        where fp.organization_id = #{project.organizationId}
        <if test="project.name != null">
            and fp.name like concat(concat('%',#{project.name}),'%')
        </if>
        <if test="project.code != null">
            and fp.code like concat(concat('%',#{project.code}),'%')
        </if>
        <if test="project.enabled != null">
            and fp.is_enabled = #{project.enabled}
        </if>
        <if test="project.typeName != null">
            and fpt.name like concat(concat('%',#{project.typeName}),'%')
        </if>
        <if test="param != null">
            and(
            fp.name like concat(concat('%',#{param}),'%') or
            fp.code like concat(concat('%',#{param}),'%') or
            fpt.name like concat(concat('%',#{param}),'%')
            )
        </if>
        order by fp.id desc
        <if test="start != null and size != null">
            limit #{start}, #{size}
        </if>
        ) t1
        left join fd_project_relationship fpr
        on
        t1.id = fpr.program_id
        left join fd_project fp1
        on fpr.project_id = fp1.id
    </select>

    <select id="fulltextSearchCategory" resultMap="projectDTO">
        select
        t1.*,
        fp1.id as project_id,
        fp1.name as project_name,
        fp1.code as project_code,
        fpr.is_enabled as project_enabled,
        fp1.organization_id as project_organization_id
        from
        (
        select fpc.code as category,fp.id,fp.name,fp.code,fp.organization_id,fp.is_enabled,fp.IMAGE_URL,fp.object_version_number, fpt.name as
        type_name
        from fd_project fp
        left join fd_project_type fpt
        on fp.type = fpt.code
        left join fd_project_map_category fpmc
        ON fpmc.PROJECT_ID=fp.id
        left join fd_project_category fpc
        ON fpc.id = fpmc.CATEGORY_ID
        where fp.organization_id = #{project.organizationId}
        <if test="project.name != null">
            and fp.name like concat(concat('%',#{project.name}),'%')
        </if>
        <if test="project.code != null">
            and fp.code like concat(concat('%',#{project.code}),'%')
        </if>
        <if test="project.enabled != null">
            and fp.is_enabled = #{project.enabled}
        </if>
        <if test="project.typeName != null">
            and fpt.name like concat(concat('%',#{project.typeName}),'%')
        </if>
        <if test="param != null">
            and(
            fp.name like concat(concat('%',#{param}),'%') or
            fp.code like concat(concat('%',#{param}),'%') or
            fpt.name like concat(concat('%',#{param}),'%')
            )
        </if>
        order by fp.id desc
        <if test="start != null and size != null">
            limit #{start}, #{size}
        </if>
        ) t1
        left join fd_project_relationship fpr
        on
        (
        t1.id = fpr.program_id
        and t1.category = 'PROGRAM'
        )
        left join fd_project fp1
        on fpr.project_id = fp1.id
        WHERE t1.category!='PROGRAM_PROJECT'
    </select>


    <select id="selectProjectsByUserIdWithParam" resultMap="projectDTO">
        SELECT DISTINCT fd_project.*, fpt.name AS type_name
        FROM fd_project
        LEFT JOIN fd_project_type fpt ON fd_project.type = fpt.code
        JOIN iam_member_role ON iam_member_role.source_id = fd_project.id
        AND iam_member_role.source_type = 'project'
        WHERE iam_member_role.member_id = #{userId}
        <if test="projectDTO != null">
            <if test="projectDTO.organizationId != null">
                AND fd_project.organization_id = #{projectDTO.organizationId}
            </if>
            <if test="projectDTO.name != null">
                AND fd_project.name LIKE concat(concat('%',#{projectDTO.name}),'%')
            </if>
            <if test="projectDTO.code != null">
                AND fd_project.code LIKE concat(concat('%',#{projectDTO.code}),'%')
            </if>
            <if test="projectDTO.enabled != null">
                AND fd_project.is_enabled = #{projectDTO.enabled}
            </if>
        </if>
        <if test="param != null">
            AND (
            fd_project.name LIKE concat(concat('%', #{param}), '%') OR
            fd_project.code LIKE concat(concat('%', #{param}), '%')
            )
        </if>
        order by fd_project.id desc
    </select>

    <select id="selectProjectsByUserId" resultMap="projectDTO">
        SELECT DISTINCT fd_project.*, fpt.name AS type_name
        FROM fd_project
        INNER JOIN iam_member_role ON iam_member_role.source_id = fd_project.id
        INNER JOIN iam_role ON iam_role.is_enabled = 1 and iam_role.id = iam_member_role.role_id AND
        iam_member_role.source_type = 'project'
        LEFT JOIN fd_project_type fpt ON fd_project.type = fpt.code
        WHERE iam_member_role.member_id = #{userId}
        <if test="projectDTO != null">
            <if test="projectDTO.organizationId != null">
                AND fd_project.organization_id = #{projectDTO.organizationId}
            </if>
            <if test="projectDTO.name != null">
                AND fd_project.name LIKE concat(concat('%',#{projectDTO.name}),'%')
            </if>
            <if test="projectDTO.enabled != null">
                AND fd_project.is_enabled = #{projectDTO.enabled}
            </if>
        </if>
    </select>

    <select id="selectProjectsWithRoles" databaseId="mysql" resultMap="ProjectWithRoleDTO">
        SELECT
        fp.id,
        fp.name,
        fp.code,
        fp.organization_id,
        fo.name AS organization_name,
        fp.is_enabled,
        ir.id AS role_id,
        ir.name AS role_name,
        ir.code AS role_code,
        ir.is_enabled AS role_is_enabled
        FROM fd_project fp
        INNER JOIN
        (
        SELECT DISTINCT source_id FROM iam_member_role
        WHERE member_id = #{id}
        AND member_type = 'user'
        AND source_type = 'project'
        ORDER BY source_id ASC
        <if test="start != null and size != null ">
            LIMIT #{start}, #{size}
        </if>
        ) t
        ON fp.id = t.source_id
        INNER JOIN iam_member_role imr ON imr.source_id = fp.id
        LEFT JOIN iam_role ir ON imr.role_id = ir.id
        LEFT JOIN fd_organization fo ON fp.organization_id = fo.id
        WHERE imr.source_type = 'project'
        AND imr.member_type = 'user'
        AND imr.member_id = #{id}
        <if test="params != null">
            AND (
            fp.name LIKE concat(concat('%', #{params}), '%') OR
            fp.code LIKE concat(concat('%', #{params}), '%')
            )
        </if>
    </select>

    <!-- 根据databaseId找指定的sql，既不是mysql也不是oracle走这条sql，默认是使用mysql的sql -->
    <select id="selectProjectsWithRoles" resultMap="ProjectWithRoleDTO">
        SELECT
        fp.id,
        fp.name,
        fp.code,
        fp.organization_id,
        fo.name AS organization_name,
        fp.is_enabled,
        ir.id AS role_id,
        ir.name AS role_name,
        ir.code AS role_code,
        ir.is_enabled AS role_is_enabled
        FROM fd_project fp
        INNER JOIN
        (
        SELECT DISTINCT source_id FROM iam_member_role
        WHERE member_id = #{id}
        AND member_type = 'user'
        AND source_type = 'project'
        ORDER BY source_id ASC
        <if test="start != null and size != null ">
            LIMIT #{start}, #{size}
        </if>
        ) t
        ON fp.id = t.source_id
        INNER JOIN iam_member_role imr ON imr.source_id = fp.id
        LEFT JOIN iam_role ir ON imr.role_id = ir.id
        LEFT JOIN fd_organization fo ON fp.organization_id = fo.id
        WHERE imr.source_type = 'project'
        AND imr.member_type = 'user'
        AND imr.member_id = #{id}
        <if test="params != null">
            AND (
            fp.name LIKE concat(concat('%', #{params}), '%') OR
            fp.code LIKE concat(concat('%', #{params}), '%')
            )
        </if>
    </select>

    <select id="selectProjectsWithRoles" databaseId="oracle" resultMap="ProjectWithRoleDTO">
        SELECT
        fp.id,
        fp.name,
        fp.code,
        fp.organization_id,
        fo.name AS organization_name,
        fp.is_enabled,
        ir.id AS role_id,
        ir.name AS role_name,
        ir.code AS role_code,
        ir.is_enabled AS role_is_enabled
        FROM fd_project fp
        INNER JOIN
        (
        <![CDATA[
            SELECT *
            FROM
            (
                SELECT TMP_PAGE.*, ROWNUM ROW_ID
                FROM
                (
                    SELECT DISTINCT source_id
                    FROM iam_member_role
                    WHERE member_id = #{id}
                    AND member_type = 'user'
                    AND source_type = 'project'
                    ORDER BY source_id ASC
                ) TMP_PAGE
                WHERE ROWNUM <= ((#{start} + 1) * #{size})
            )
            WHERE ROW_ID > (#{start} * #{size})
        ]]>
        ) t
        ON fp.id = t.source_id
        INNER JOIN iam_member_role imr ON imr.source_id = fp.id
        LEFT JOIN iam_role ir ON imr.role_id = ir.id
        LEFT JOIN fd_organization fo ON fp.organization_id = fo.id
        WHERE imr.source_type = 'project'
        AND imr.member_type = 'user'
        AND imr.member_id = #{id}
        <if test="params != null">
            AND (
            fp.name LIKE concat(concat('%', #{params}), '%') OR
            fp.code LIKE concat(concat('%', #{params}), '%')
            )
        </if>
    </select>

    <select id="projectEnabled" resultType="java.lang.Boolean">
        SELECT is_enabled FROM fd_project WHERE id = #{sourceId}
    </select>

    <select id="selectByIds" resultMap="projectDTO">
        select * from fd_project
        where id in
        <foreach item="id" index="index" collection="ids"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectProjectNameByType" resultType="java.lang.String">
        SELECT
            NAME
        FROM
            fd_project
        WHERE
            TYPE = #{type}
        AND organization_id = #{orgId}
    </select>

    <select id="selectProjectNameNoType" resultType="java.lang.String">
        SELECT
            NAME
        FROM
            fd_project
        WHERE
            TYPE IS NULL
        AND organization_id = #{orgId};
    </select>

    <select id="selectProjsNotGroup" resultType="io.choerodon.iam.infra.dto.ProjectDTO">

     SELECT fp.id as id, fp.NAME AS name,fp.CODE As code
     FROM
	 fd_project fp
	 LEFT JOIN fd_project_map_category fpmc ON fpmc.PROJECT_ID = fp.id
	 LEFT JOIN fd_project_category fpc ON fpc.id = fpmc.CATEGORY_ID
     WHERE
	 fpc.code = 'AGILE'
    AND fp.ORGANIZATION_ID = #{orgId};
    </select>

    <select id="selectProjsNotInAnyGroup" resultType="io.choerodon.iam.infra.dto.ProjectDTO">
        SELECT
            ID,
            NAME,
            CODE
        FROM
            fd_project
        WHERE
            CATEGORY = 'AGILE'
        AND ORGANIZATION_ID = #{orgId}
        AND ID NOT IN (
            SELECT DISTINCT
                PROJECT_ID
            FROM
                fd_project_relationship
        )
    </select>


    <select id="selectGroupInfoByEnableProject" resultType="io.choerodon.iam.infra.dto.ProjectDTO">
        SELECT
        FP.ID,
        FP.NAME,
        FP.ORGANIZATION_ID,
        FP.CODE,
        FP.IS_ENABLED,
        FP.OBJECT_VERSION_NUMBER,
        FP.IMAGE_URL,
        FP.CATEGORY,
        FP.TYPE,
        FPT.NAME AS TYPE_NAME
        FROM FD_PROJECT_RELATIONSHIP FPR
        INNER JOIN FD_PROJECT FP ON FPR.PROGRAM_ID = FP.ID
        LEFT JOIN FD_PROJECT_TYPE FPT ON FP.TYPE = FPT.CODE
        WHERE FP.ORGANIZATION_ID = #{orgId} AND FPR.PROJECT_ID = #{projectId}
        AND FPR.IS_ENABLED = 1
        AND  <![CDATA[ CURRENT_DATE >= FPR.START_DATE ]]>
        AND (1 = (CASE WHEN FPR.END_DATE IS NULL THEN 1 ELSE  (<![CDATA[  SELECT CURRENT_DATE < FPR.END_DATE ]]>) END))
    </select>

    <select id="selectCategoryByPrimaryKey" resultType="io.choerodon.iam.infra.dto.ProjectDTO">
        select fpc.code AS category,fp.*
        from fd_project fp
        left join fd_project_map_category fpmc
        on fp.id=fpmc.PROJECT_ID
        left join fd_project_category fpc
        on fpc.id = fpmc.CATEGORY_ID
        Where fp.id=#{projectId}
    </select>
</mapper>
