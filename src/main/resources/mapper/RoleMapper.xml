<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.iam.infra.mapper.RoleMapper">
    <resultMap id="roleWithPermissionsAndLabels" type="io.choerodon.iam.infra.dto.RoleDTO" autoMapping="true">
        <id column="id" property="id"></id>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="is_enabled" property="enabled" jdbcType="BOOLEAN"/>
        <result column="is_modified" property="modified" jdbcType="BOOLEAN"/>
        <result column="is_enable_forbidden" property="enableForbidden" jdbcType="BOOLEAN"/>
        <result column="is_built_in" property="builtIn" jdbcType="BOOLEAN"/>
        <result column="object_version_number" property="objectVersionNumber" jdbcType="DECIMAL"/>
        <collection property="permissions" ofType="io.choerodon.iam.infra.dto.PermissionDTO" autoMapping="true">
            <id column="permission_id" property="id"></id>
            <result column="permission_code" property="code" jdbcType="VARCHAR"/>
            <result column="path" property="path" jdbcType="VARCHAR"/>
            <result column="method" property="method" jdbcType="VARCHAR"/>
            <result column="permission_level" property="resourceLevel" jdbcType="VARCHAR"/>
            <result column="action" property="action" jdbcType="VARCHAR"/>
            <result column="controller" property="controller" jdbcType="VARCHAR"/>
            <result column="is_public_access" property="publicAccess" jdbcType="BOOLEAN"/>
            <result column="is_login_access" property="loginAccess" jdbcType="BOOLEAN"/>
            <result column="service_code" property="serviceCode" jdbcType="VARCHAR"/>
            <result column="permission_description" property="description" jdbcType="VARCHAR"/>
        </collection>
        <collection property="labels" ofType="io.choerodon.iam.infra.dto.LabelDTO" autoMapping="true">
            <id column="label_id" property="id"></id>
            <result column="label_name" property="name" jdbcType="VARCHAR"/>
            <result column="label_type" property="type" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <!--建立boolean映射关系-->
    <resultMap id="RoleDTO" type="io.choerodon.iam.infra.dto.RoleDTO" autoMapping="true">
        <id column="id" property="id"></id>
        <result column="is_enabled" property="enabled" jdbcType="BOOLEAN"/>
        <result column="is_modified" property="modified" jdbcType="BOOLEAN"/>
        <result column="is_enable_forbidden" property="enableForbidden" jdbcType="BOOLEAN"/>
        <result column="is_built_in" property="builtIn" jdbcType="BOOLEAN"/>
    </resultMap>



    <select id="fulltextSearch" resultMap="RoleDTO">
        select  * from iam_role r
        WHERE 1=1
        <if test="roleQuery.name != null">
            AND r.name LIKE concat(concat('%',#{roleQuery.name}), '%')
        </if>
        <if test="roleQuery.code != null">
            AND r.code LIKE concat(concat('%',#{roleQuery.code}), '%')
        </if>
        <if test="roleQuery.level != null">
            AND r.fd_level LIKE concat(concat('%',#{roleQuery.level}), '%')
        </if>
        <if test="roleQuery.enabled != null">
            AND r.is_enabled = #{roleQuery.enabled}
        </if>
        <if test="roleQuery.builtIn != null">
            AND r.is_built_in = #{roleQuery.builtIn}
        </if>
        <if test="roleQuery.param != null">
            AND (
            r.name LIKE concat(concat('%',#{roleQuery.param}), '%') OR
            r.code LIKE concat(concat('%',#{roleQuery.param}), '%') OR
            r.resource_level LIKE concat(concat('%',#{roleQuery.param}), '%')
            )
        </if>
    </select>


    <select id="selectRoleWithPermissionsAndLabels" resultMap="roleWithPermissionsAndLabels">
        SELECT
        ir.*
        ip.id permission_id,
        ip.code permission_code,
        ip.path,
        ip.method,
        ip.resource_level AS permission_level,
        ip.action,
        ip.controller,
        ip.is_public_access,
        ip.is_login_access,
        ip.service_code,
        ip.description AS permission_description,
        il.id AS label_id,
        il.name AS label_name,
        il.type AS label_type
        FROM
        iam_role ir
        LEFT JOIN iam_role_permission irp ON ir.id = irp.role_id
        LEFT JOIN iam_permission ip ON irp.permission_id = ip.id
        LEFT JOIN iam_role_label irl ON ir.id = irl.role_id
        LEFT JOIN iam_label il ON irl.label_id = il.id
        AND il.type = 'role'
        WHERE ir.id = #{id}
    </select>

    <select id="rolesLevelCount" resultType="int">
        SELECT COUNT(DISTINCT resource_level)
        from iam_role
        where id in
        <foreach collection="roleIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="queryRoleByUser" resultType="long">
        SELECT role_id
        FROM iam_member_role m
        LEFT JOIN iam_role r
        ON m.role_id=r.id
        WHERE member_type='user'
        AND member_id = #{userId}
        AND source_type = #{sourceType}
        AND source_id = #{sourceId}
        AND r.is_enabled = 1
    </select>

    <select id="selectRolesByLabelNameAndType" resultMap="RoleDTO">
        SELECT ir.*
        FROM iam_role ir
        LEFT JOIN iam_role_label irl ON ir.id = irl.role_id
        LEFT JOIN iam_label il ON irl.label_id = il.id
        WHERE il.name = #{name}
        AND il.type = #{type}
    </select>


    <select id="queryRolesInfoByUser" resultMap="RoleDTO">
        SELECT role.*
        FROM
        iam_role role
        LEFT JOIN iam_member_role imr ON role.id = imr.role_id
        WHERE
        imr.member_id = #{userId}
        AND imr.member_type = 'user'
        AND imr.source_id = #{sourceId}
        AND imr.source_type = #{sourceType}
    </select>

    <select id="selectInitRolesByPermissionId" resultMap="RoleDTO">
        SELECT * FROM iam_role ir
        LEFT JOIN iam_role_permission irp ON ir.id = irp.role_id
        WHERE irp.permission_id = #{permissionId}
        AND ir.is_built_in = 1
    </select>

    <!--<select id="matchCode" resultType="java.lang.String">-->
        <!--SELECT code-->
        <!--FROM iam_role-->
        <!--WHERE code-->
        <!--IN-->
        <!--<foreach item="item" index="index" collection="codeSet"-->
                 <!--open="(" separator="," close=")">-->
            <!--#{item}-->
        <!--</foreach>-->
    <!--</select>-->

    <!--<select id="queryRoleByOrgId" resultMap="RoleDTO">-->
        <!--SELECT ir.*-->
        <!--FROM iam_role ir-->
        <!--WHERE 1=1-->
        <!--AND EXISTS-->
        <!--(SELECT 'X' FROM iam_member_role imr-->
        <!--WHERE imr.source_id = #{orgId}-->
        <!--AND imr.source_type ='organization'-->
        <!--AND ir.id=imr.role_id)-->
    <!--</select>-->

    <select id="fuzzySearchRolesByName" resultMap="RoleDTO">
        SELECT ir.*
        FROM iam_role ir
        WHERE 1=1
        AND ir.FD_LEVEL = #{sourceType}
        <if test="roleName != null">
            AND ir.NAME LIKE CONCAT('%', CONCAT(#{roleName}, '%'))
        </if>
    </select>
</mapper>
